"use strict";(self.webpackChunktutorialcpp=self.webpackChunktutorialcpp||[]).push([[5388],{4777:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"C++/operator","title":"Operator dalam C++","description":"Berikut adalah penjelasan tentang operator-operator yang umum digunakan dalam C++.","source":"@site/docs/C++/operator.md","sourceDirName":"C++","slug":"/C++/operator","permalink":"/docs/C++/operator","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Tipe Data dalam C++","permalink":"/docs/C++/typedata"},"next":{"title":"If Statement (Percabangan) dalam C++","permalink":"/docs/C++/if_state"}}');var t=r(4848),i=r(8453);const l={sidebar_position:6},o="Operator dalam C++",d={},c=[{value:"1. Operator Aritmatika",id:"1-operator-aritmatika",level:2},{value:"2. Operator Perbandingan",id:"2-operator-perbandingan",level:2},{value:"3. Operator Logika",id:"3-operator-logika",level:2},{value:"4. Operator Assignment",id:"4-operator-assignment",level:2},{value:"5. Operator Increment/Decrement",id:"5-operator-incrementdecrement",level:2},{value:"6. Operator Bitwise",id:"6-operator-bitwise",level:2},{value:"Contoh Program Lengkap",id:"contoh-program-lengkap",level:2},{value:"Catatan Penting",id:"catatan-penting",level:2}];function s(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"operator-dalam-c",children:"Operator dalam C++"})}),"\n",(0,t.jsx)(e.p,{children:"Berikut adalah penjelasan tentang operator-operator yang umum digunakan dalam C++."}),"\n",(0,t.jsx)(e.h2,{id:"1-operator-aritmatika",children:"1. Operator Aritmatika"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:'int a = 10, b = 3;\r\n\r\ncout << "Penjumlahan: " << a + b << endl;     // Output: 13\r\ncout << "Pengurangan: " << a - b << endl;      // Output: 7\r\ncout << "Perkalian: " << a * b << endl;       // Output: 30\r\ncout << "Pembagian: " << a / b << endl;       // Output: 3\r\ncout << "Sisa Bagi (Modulo): " << a % b << endl;  // Output: 1\n'})}),"\n",(0,t.jsx)(e.h2,{id:"2-operator-perbandingan",children:"2. Operator Perbandingan"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:'int x = 5, y = 10;\r\n\r\ncout << "x == y: " << (x == y) << endl;  // Equal to (false)\r\ncout << "x != y: " << (x != y) << endl;  // Not equal to (true)\r\ncout << "x < y: " << (x < y) << endl;    // Less than (true)\r\ncout << "x > y: " << (x > y) << endl;    // Greater than (false)\r\ncout << "x <= y: " << (x <= y) << endl;  // Less than or equal (true)\r\ncout << "x >= y: " << (x >= y) << endl;  // Greater than or equal (false)\n'})}),"\n",(0,t.jsx)(e.h2,{id:"3-operator-logika",children:"3. Operator Logika"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:'bool p = true, q = false;\r\n\r\ncout << "AND (&&): " << (p && q) << endl;  // false\r\ncout << "OR (||): " << (p || q) << endl;   // true\r\ncout << "NOT (!): " << (!p) << endl;       // false\n'})}),"\n",(0,t.jsx)(e.h2,{id:"4-operator-assignment",children:"4. Operator Assignment"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:'int nilai = 10;\r\n\r\nnilai += 5;  // nilai = nilai + 5\r\ncout << "+=: " << nilai << endl;  // 15\r\n\r\nnilai -= 3;  // nilai = nilai - 3\r\ncout << "-=: " << nilai << endl;  // 12\r\n\r\nnilai *= 2;  // nilai = nilai * 2\r\ncout << "*=: " << nilai << endl;  // 24\r\n\r\nnilai /= 4;  // nilai = nilai / 4\r\ncout << "/=: " << nilai << endl;  // 6\r\n\r\nnilai %= 4;  // nilai = nilai % 4\r\ncout << "%=: " << nilai << endl;  // 2\n'})}),"\n",(0,t.jsx)(e.h2,{id:"5-operator-incrementdecrement",children:"5. Operator Increment/Decrement"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:'int i = 5;\r\n\r\ncout << "Pre-increment: " << ++i << endl;   // 6 (increment dulu, lalu print)\r\ncout << "Post-increment: " << i++ << endl;  // 6 (print dulu, lalu increment)\r\ncout << "Nilai sekarang: " << i << endl;    // 7\r\n\r\ncout << "Pre-decrement: " << --i << endl;   // 6 (decrement dulu, lalu print)\r\ncout << "Post-decrement: " << i-- << endl;  // 6 (print dulu, lalu decrement)\r\ncout << "Nilai sekarang: " << i << endl;    // 5\n'})}),"\n",(0,t.jsx)(e.h2,{id:"6-operator-bitwise",children:"6. Operator Bitwise"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:'int a = 5;  // 101 dalam biner\r\nint b = 3;  // 011 dalam biner\r\n\r\ncout << "AND (&): " << (a & b) << endl;   // 1 (001)\r\ncout << "OR (|): " << (a | b) << endl;    // 7 (111)\r\ncout << "XOR (^): " << (a ^ b) << endl;   // 6 (110)\r\ncout << "Left shift (<<): " << (a << 1) << endl;   // 10 (1010)\r\ncout << "Right shift (>>): " << (a >> 1) << endl;  // 2 (010)\n'})}),"\n",(0,t.jsx)(e.h2,{id:"contoh-program-lengkap",children:"Contoh Program Lengkap"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:'#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a = 10, b = 3;\r\n    \r\n    // Operasi aritmatika\r\n    cout << "Aritmatika:" << endl;\r\n    cout << a << " + " << b << " = " << (a + b) << endl;\r\n    cout << a << " - " << b << " = " << (a - b) << endl;\r\n    \r\n    // Operasi perbandingan\r\n    cout << "\\nPerbandingan:" << endl;\r\n    cout << a << " > " << b << " adalah " << (a > b) << endl;\r\n    \r\n    // Operasi logika\r\n    bool p = true, q = false;\r\n    cout << "\\nLogika:" << endl;\r\n    cout << "p AND q = " << (p && q) << endl;\r\n    \r\n    return 0;\r\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"catatan-penting",children:"Catatan Penting"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Perhatikan urutan operasi (operator precedence)"}),"\n",(0,t.jsx)(e.li,{children:"Gunakan tanda kurung untuk mengatur prioritas operasi"}),"\n",(0,t.jsx)(e.li,{children:"Operator logika menghasilkan nilai boolean (true/false)"}),"\n",(0,t.jsx)(e.li,{children:"Operator increment/decrement memiliki versi prefix dan postfix"}),"\n",(0,t.jsx)(e.li,{children:"Operator bitwise bekerja pada level bit"}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(s,{...n})}):s(n)}},8453:(n,e,r)=>{r.d(e,{R:()=>l,x:()=>o});var a=r(6540);const t={},i=a.createContext(t);function l(n){const e=a.useContext(i);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),a.createElement(i.Provider,{value:e},n.children)}}}]);